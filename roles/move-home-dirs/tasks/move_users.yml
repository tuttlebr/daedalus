# We cannot move the home directory of the currently logged in user
# So, we create a temporary user and login with that

---
- name: create {{ move_home_dirs_new_root }}
  file:
    path: "{{ move_home_dirs_new_root }}"
    mode: "0755"
    state: directory

- name: set key path
  set_fact:
    tmp_user_key_path: /tmp/ssh-key-for-ansible-move-home-dirs

- name: generate key for temporary user
  command: ssh-keygen -q -t rsa -f "{{ tmp_user_key_path }}" -C "" -N ""
  args:
    creates: "{{ tmp_user_key_path }}"
  delegate_to: 127.0.0.1
  become: false
  run_once: true

- name: delete temporary user
  user:
     name: "{{ tmp_user }}"
     state: absent
     remove: yes
     force: yes

- name: create temporary user
  user:
    name: "{{ tmp_user }}"
    home: "{{ move_home_dirs_new_root }}/{{ tmp_user }}"

- name: add new key for temporary user
  authorized_key:
    user: "{{ tmp_user }}"
    key: "{{ lookup('file', tmp_user_key_path + '.pub') }}"

- name: grant sudo to temporary user
  copy:
    content: "{{ tmp_user }} ALL=(ALL) NOPASSWD:ALL"
    dest: "/etc/sudoers.d/{{ tmp_user }}"
    mode: "0700"

# Useful for slurm clusters
- name: grant SSH access to temporary user
  lineinfile:
    path: /etc/localusers
    line: "{{ tmp_user }}"
    create: yes
    mode: "0644"

- name: move each user
  include_tasks: move_user.yml
  vars:
    ansible_user: "{{ tmp_user }}"
    ansible_ssh_private_key_file: "{{ tmp_user_key_path }}"
  loop: "{{user_list.stdout_lines}}"
  loop_control:
    loop_var: user

- name: revoke SSH access from temporary user
  lineinfile:
    path: /etc/localusers
    line: "{{ tmp_user }}"
    state: absent

- name: revoke sudo for temporary user
  file:
    path: "/etc/sudoers.d/{{ tmp_user }}"
    state: absent

- name: delete temporary user
  user:
     name: "{{ tmp_user }}"
     state: absent
     remove: yes
     force: yes
