---
# For virtual cluster, ensure hosts file correctly uses private network
hosts_network_interface: "eth1"

# Ensure vagrant user has SSH access after pam_slurm for debugging
slurm_allow_ssh_user:
- "vagrant"
- "root"

# Perform cleanup tasks during the install to minimize disk space impact
hpcsdk_clean_up_tarball_after_extract: true
hpcsdk_clean_up_temp_dir: true
slurm_build_dir_cleanup: false

# Ensure we use the slurm management node for syslog
rsyslog_client_tcp_host: "{{ groups['slurm-metric'][0] }}"

# Don't install these packages by default on large cluster
slurm_cluster_install_singularity: false
slurm_cluster_install_cuda: false
install_open_ondemand: false

# HPC SDK install
sm_install_host: "{{ groups['slurm-login'][0] }}"
slurm_install_hpcsdk: true

# Ensure NHC and Enroot/Pyxis are configured
slurm_install_nhc: true
slurm_install_enroot: true
slurm_install_pyxis: true

# Configure NGINX container cache
slurm_enable_container_registry: false
slurm_enable_nginx_docker_cache: true
nginx_docker_cache_hostgroup: "slurm-cache"
nginx_docker_cache_clients: "slurm-node"

# Configure monitoring stack on slurm-metric nodes
slurm_monitoring_group: "slurm-metric"

# Configure NFS
nfs_server_group: "slurm-nfs"
nfs_client_group: "slurm-master,slurm-node,slurm-login,slurm-metric"
nfs_mounts:
  - mountpoint: /home
    server: '{{ groups["slurm-nfs"][0] }}'
    path: /home
    options: async,vers=3
  - mountpoint: /sw
    server: '{{ groups["slurm-nfs"][0] }}'
    path: /sw
    options: async,vers=3

# Enable Slurm HA
slurm_enable_ha: true
